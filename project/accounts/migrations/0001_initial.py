# Generated by Django 4.1.3 on 2022-11-12 16:55

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_patient', models.BooleanField(default=False)),
                ('is_doctor', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('date_of_birth', models.DateField()),
                ('iin_number', models.CharField(max_length=12, unique=True, validators=[django.core.validators.RegexValidator('^\\d{12,12}$')])),
                ('id_number', models.CharField(max_length=9, unique=True, validators=[django.core.validators.RegexValidator('^\\d{9,9}$')])),
                ('first_name', models.CharField(max_length=150)),
                ('middle_name', models.CharField(blank=True, max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('gender', models.CharField(choices=[('F', 'Female'), ('M', 'Male')], max_length=1)),
                ('blood_group', models.CharField(choices=[('OP', 'O(+)'), ('ON', 'O(-)'), ('AP', 'A(+)'), ('AN', 'A(-)'), ('BP', 'B(+)'), ('BN', 'B(-)'), ('ABP', 'AB(+)'), ('ABN', 'AB(-)')], max_length=3)),
                ('contact_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$')])),
                ('department_id', models.IntegerField()),
                ('special_id', models.IntegerField()),
                ('experience', models.IntegerField()),
                ('photo', models.ImageField(blank=True, upload_to='')),
                ('category', models.CharField(max_length=150)),
                ('price', models.IntegerField()),
                ('schedule_details', models.TextField(blank=True, default='')),
                ('degree', models.CharField(choices=[('MD', 'MD'), ('PH', 'PhD')], max_length=2)),
                ('rating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(0)])),
                ('address', models.CharField(blank=True, max_length=200)),
                ('homepage', models.URLField(blank=True, max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('date_of_birth', models.DateField()),
                ('iin_number', models.CharField(max_length=12, unique=True, validators=[django.core.validators.RegexValidator('^\\d{12,12}$')])),
                ('id_number', models.CharField(max_length=9, unique=True, validators=[django.core.validators.RegexValidator('^\\d{9,9}$')])),
                ('first_name', models.CharField(max_length=150)),
                ('middle_name', models.CharField(blank=True, max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('gender', models.CharField(choices=[('F', 'Female'), ('M', 'Male')], max_length=1)),
                ('blood_group', models.CharField(choices=[('OP', 'O(+)'), ('ON', 'O(-)'), ('AP', 'A(+)'), ('AN', 'A(-)'), ('BP', 'B(+)'), ('BN', 'B(-)'), ('ABP', 'AB(+)'), ('ABN', 'AB(-)')], max_length=3)),
                ('contact_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$')])),
                ('emergency_contact', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$')])),
                ('address', models.CharField(blank=True, max_length=200)),
                ('marital_status', models.CharField(choices=[('SIN', 'Single'), ('MAR', 'Married'), ('DIV', 'Divorced'), ('OTH', 'Other')], default='OTH', max_length=3)),
            ],
        ),
    ]
